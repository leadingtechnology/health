version: '3.8'

services:
  # PostgreSQL Database (for local development)
  postgres:
    image: postgres:15-alpine
    container_name: health-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: localdev123
      POSTGRES_DB: health
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./Database/health_postgres.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - health-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # .NET API
  api:
    build:
      context: ./apps/health_api
      dockerfile: Dockerfile
    container_name: health-api
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:5000
      ConnectionStrings__Default: "Host=postgres;Port=5432;Database=health;Username=postgres;Password=localdev123;Search Path=health"
      KEYRING_MASTER_KEY: "dGVzdGtleWZvcmRldmVsb3BtZW50b25seQ=="
      Jwt__SigningKey: "development_key_for_testing_only_change_in_production"
      Jwt__Issuer: "http://localhost:5000"
      Jwt__Audience: "http://localhost:3000"
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - health-network
    volumes:
      - ./apps/health_api:/app
    command: ["dotnet", "watch", "run", "--no-launch-profile"]

  # Flutter Web (served via nginx)
  web:
    image: nginx:alpine
    container_name: health-web
    ports:
      - "8080:80"
    volumes:
      - ./apps/health_app/build/web:/usr/share/nginx/html:ro
      - ./deploy/nginx-local.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - api
    networks:
      - health-network

  # Adminer (Database GUI)
  adminer:
    image: adminer:latest
    container_name: health-adminer
    ports:
      - "8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    networks:
      - health-network

networks:
  health-network:
    driver: bridge

volumes:
  postgres_data: